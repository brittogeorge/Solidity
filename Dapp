pragma solidity >=0.7.0 <0.9.0;
// SPDX-License-Identifier: GPL-3.0

contract dapp{
    struct Memo{
    string name;
    string message;
    uint timestamp;
    address from;
    }
    Memo[] memos; // creating an array
    address payable owner; // owner is going to be get paid
    constructor(){
        owner=payable(msg.sender);
    }
    function buy(string calldata name, string calldata message) external payable{
        require(msg.value>0, "pay more than 0 ether");
        owner.transfer(msg.value);
        memos.push(Memo(name,message,block.timestamp,msg.sender));
    }
    function get() public view returns(Memo[] memory){
        return memos;
    }
    }
